/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ecole;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.classe;
import model.etudiant;
import model.inscription;
import utils.DB;
import utils.fonction;

/**
 *
 * @author Alfousseni
 */
public class inscriptionEtudiant extends javax.swing.JFrame {

    private static DB db;
    private static int resultat;
    private static fonction f;
    private static boolean verification = false;

    /**
     * Creates new form inscriptionEtudiant
     */
    public inscriptionEtudiant(int resultat) {
        try {
            this.resultat = resultat;
            initComponents();
            db = DB.getInstance();
            userName_txt.setText("Utilisateur : " + getUser());
            etudiantEmail_txt.setText("nomprenom@isi.sn");
            etudiantEmail_txt.setEditable(false);
            setLocationRelativeTo(null);
            for (classe cl : getClasses()) {
                classe_cbx.addItem(cl.getLibelle());
            }
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        affichage();

    }
//    public inscriptionEtudiant() {
//        try{
//        initComponents();
//        setLocationRelativeTo(null);
//        db = DB.getInstance();
//        for(classe cl : getClasses() ){
//            classe_cbx.addItem(cl.getLibelle());
//        }
//        }catch (Exception ex) {
//            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        etudiantTel_txt = new javax.swing.JTextField();
        etudiantNom_txt = new javax.swing.JTextField();
        etudiantPrenom_txt = new javax.swing.JTextField();
        etudiantEmail_txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        annee_cbx = new javax.swing.JComboBox<>();
        classe_cbx = new javax.swing.JComboBox<>();
        inscrire_btn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        annuler_btn = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableauAffichage = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        deconnexion_btn = new javax.swing.JButton();
        userName_txt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("INFORMATION DE L'ETUDIANT");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Tel");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("NOM");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("PRENOM");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("EMAIL");

        etudiantTel_txt.setBackground(new java.awt.Color(255, 255, 255));
        etudiantTel_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etudiantTel_txtActionPerformed(evt);
            }
        });

        etudiantNom_txt.setBackground(new java.awt.Color(255, 255, 255));

        etudiantPrenom_txt.setBackground(new java.awt.Color(255, 255, 255));
        etudiantPrenom_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etudiantPrenom_txtActionPerformed(evt);
            }
        });

        etudiantEmail_txt.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("INSCRIPTION");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CLASSES");

        annee_cbx.setBackground(new java.awt.Color(255, 255, 255));
        annee_cbx.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        annee_cbx.setForeground(new java.awt.Color(0, 0, 0));
        annee_cbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2023", "2024", "2025" }));

        classe_cbx.setBackground(new java.awt.Color(255, 255, 255));
        classe_cbx.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        classe_cbx.setForeground(new java.awt.Color(0, 0, 0));

        inscrire_btn.setBackground(new java.awt.Color(0, 51, 255));
        inscrire_btn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        inscrire_btn.setText("INSCRIRE");
        inscrire_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscrire_btnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("ANNEE");

        annuler_btn.setBackground(new java.awt.Color(255, 51, 51));
        annuler_btn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        annuler_btn.setForeground(new java.awt.Color(0, 0, 0));
        annuler_btn.setText("Annuler");
        annuler_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annuler_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(83, 83, 83)
                                .addComponent(etudiantEmail_txt))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etudiantNom_txt)
                                    .addComponent(etudiantTel_txt)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(etudiantPrenom_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(classe_cbx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(annee_cbx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(inscrire_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(annuler_btn)
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etudiantTel_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(etudiantNom_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(etudiantPrenom_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(etudiantEmail_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annee_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(classe_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inscrire_btn)
                    .addComponent(annuler_btn))
                .addGap(21, 21, 21))
        );

        tableauAffichage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableauAffichage.setEnabled(false);
        jScrollPane1.setViewportView(tableauAffichage);

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));

        deconnexion_btn.setBackground(new java.awt.Color(255, 0, 0));
        deconnexion_btn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deconnexion_btn.setText("DECONNEXION");
        deconnexion_btn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deconnexion_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexion_btnActionPerformed(evt);
            }
        });

        userName_txt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userName_txt.setForeground(new java.awt.Color(0, 0, 0));
        userName_txt.setText("jLabel8");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(userName_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(304, 304, 304)
                .addComponent(deconnexion_btn)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deconnexion_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(userName_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inscrire_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inscrire_btnActionPerformed
        // TODO add your handling code here:
        try {
            if (!f.testField(etudiantNom_txt.getText(), etudiantPrenom_txt.getText(), etudiantTel_txt.getText())) {
                JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs");
                return;
            }
            String nomE = etudiantNom_txt.getText();
            String prenomE = etudiantPrenom_txt.getText();
            String tel = etudiantTel_txt.getText();
            int anne = Integer.parseInt(annee_cbx.getSelectedItem().toString());
            String annee = anne+"-"+(anne+1);
                    
            String classe = classe_cbx.getSelectedItem().toString();
            if (f.contole(nomE, prenomE)) {
                JOptionPane.showMessageDialog(this, "Verifier la taille du nom et prenom", "email", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (f.controleTel(tel)) {
                JOptionPane.showMessageDialog(this, "veuillez verifier le numero de telephone", "tel", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!verification) {
                insertionEtudiant(new etudiant(nomE, prenomE, tel));
            }
            if(verification){
                if(verificationInscription(tel,annee)){
                     JOptionPane.showMessageDialog(this, "l'etudiant a ete deja inscrit a cette annee", "Annee", JOptionPane.ERROR_MESSAGE);
                     return;
                }
            }

            int i = insertionInscription(new inscription(annee, recupId(tel), recupIdClasse(classe), resultat));
            JOptionPane.showMessageDialog(this, i > 0 ? "INSCRIT" : "NON INSCRIT");
            verification=false;
            clearFied();
            affichage();
            

        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_inscrire_btnActionPerformed

    private void etudiantTel_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etudiantTel_txtActionPerformed
        // TODO add your handling code here:
        String nom = "";
        String prenom = "";
        String tel = "";
        String email="";

        try {

            String recuperationPr = String.format("SELECT nom,prenom,tel,email FROM etudiants WHERE tel='%s'", etudiantTel_txt.getText());
            db.iniPreparedCmd(recuperationPr);
            ResultSet resultat_req = db.executeSelect(recuperationPr);
            if (resultat_req.next()) {
                nom = resultat_req.getString("nom");
                prenom = resultat_req.getString("prenom");
                tel = resultat_req.getString("tel");
                email= resultat_req.getString("email");
                verification = true;
            }

        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (verification) {
            etudiantNom_txt.setText(nom);
            etudiantNom_txt.setEnabled(false);

            etudiantPrenom_txt.setText(prenom);
            etudiantPrenom_txt.setEnabled(false);

            etudiantTel_txt.setText(tel);
            etudiantTel_txt.setEnabled(false);
            
            etudiantEmail_txt.setEditable(true);
            etudiantEmail_txt.setText(email);
            etudiantEmail_txt.setEnabled(false);

        } else {
            etudiantNom_txt.setText(nom);
            etudiantPrenom_txt.setText(prenom);
            etudiantTel_txt.setText(tel);
            etudiantEmail_txt.setText(email);
            etudiantEmail_txt.setEnabled(false);
            
        }
    }//GEN-LAST:event_etudiantTel_txtActionPerformed

    private void deconnexion_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexion_btnActionPerformed
        // TODO add your handling code here:
         login Login=new login();
             Login.setVisible(true);
             this.setVisible(false);
    }//GEN-LAST:event_deconnexion_btnActionPerformed

    private void etudiantPrenom_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etudiantPrenom_txtActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_etudiantPrenom_txtActionPerformed

    private void annuler_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annuler_btnActionPerformed
        // TODO add your handling code here:
        clearFied();
    }//GEN-LAST:event_annuler_btnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(inscriptionEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(inscriptionEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(inscriptionEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(inscriptionEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new inscriptionEtudiant(resultat).setVisible(true);
//            }
//        });
//    }

    public static List<classe> getClasses() {
        try {
            List<classe> classes = new ArrayList<>();
            String req = "select * from classes";
            db.iniPreparedCmd(req);
            ResultSet resultat_req = db.executeSelect(req);
            while (resultat_req.next()) {
                classe cl = new classe(resultat_req.getInt("id"), resultat_req.getString("libelle"));
                classes.add(cl);
            }
            return classes;
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }

    }

    public static String getUser() {
        try {

            String req = String.format("select nom_admin from admin where id='%d'", resultat);
            db.iniPreparedCmd(req);
            ResultSet resultat_req = db.executeSelect(req);
            if (resultat_req.next()) {
                return resultat_req.getString("nom_admin");
            }
            return null;

        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    public static int insertionEtudiant(etudiant et) {
        try {
            int a = 0;
            String insertion = "insert into etudiants(matricule,nom,prenom,email,tel) values(?,?,?,?,?)";

            db.iniPreparedCmd(insertion);
            db.getPstmt().setString(4, et.getEmail());
            db.getPstmt().setString(2, et.getNom());
            db.getPstmt().setString(1, et.getMatricule());
            db.getPstmt().setString(3, et.getPrenom());
            db.getPstmt().setString(5, et.getTel());

            a = db.executePreparedCUD();

            if (a != 0) {
                return 1;
            }

        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);

        }
        return -1;
    }

    public static int insertionInscription(inscription in) {
        try {
            int a = 0;
            String insertion = "insert into inscriptions(code,annee,id_etudiant,id_classe,id_admin) values(?,?,?,?,?)";

            db.iniPreparedCmd(insertion);
            db.getPstmt().setInt(4, in.getId_classe());
            db.getPstmt().setString(2, in.getAnnee());
            db.getPstmt().setString(1, in.getCode());
            db.getPstmt().setInt(3, in.getId_etudiant());
            db.getPstmt().setInt(5, in.getId_admin());
            a = db.executePreparedCUD();

            if (a != 0) {
                return 1;
            }

        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);

        }
        return -1;
    }

    private int recupId(String tel) {
        try {
            String recup = String.format("SELECT id FROM etudiants WHERE tel='%s'", tel);
            db.iniPreparedCmd(recup);
            ResultSet rs = db.executeSelect(recup);

            if (rs.next()) {
                return rs.getInt("id");
            }
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }

    private void clearFied() {
        etudiantNom_txt.setText("");
        etudiantPrenom_txt.setText("");
        etudiantTel_txt.setText("");
        annee_cbx.setSelectedIndex(0);
        classe_cbx.setSelectedIndex(0);
        etudiantNom_txt.setEnabled(true);
        etudiantPrenom_txt.setEnabled(true);
        etudiantTel_txt.setEnabled(true);
        etudiantEmail_txt.setEditable(true);
        etudiantEmail_txt.setText("nomprenom@isi.sn");
        etudiantEmail_txt.setEditable(false);



    }

    private void affichage() {
        try {
            ResultSet rs = db.executeSelect("SELECT e.nom as 'NOM ',e.prenom as 'PRENOM',e.tel as 'TEL',i.annee as 'ANNEE',c.libelle as 'CLASSE',a.nom_admin as 'INSCRIT PAR',e.email as 'EMAIL SCOLAIRE', e.matricule "
                    + "from etudiants e, inscriptions i,classes c,admin a "
                    + "where i.id_etudiant=e.id and i.id_classe=c.id and i.id_admin=a.id");

            db.displayTable(rs, tableauAffichage);
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int recupIdClasse(String classe) {
        try {
            String recup = String.format("SELECT id FROM classes WHERE libelle='%s'", classe);
            db.iniPreparedCmd(recup);
            ResultSet rs = db.executeSelect(recup);

            if (rs.next()) {
                return rs.getInt("id");
            }
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }
    
    private boolean verificationInscription(String tel,String anne){
        try{
        List <String> listeannees=new ArrayList<>();
        String recup=String.format("select annee from inscriptions i,etudiants e where i.id_etudiant=e.id and e.tel=%s",tel);
        ResultSet rs= db.executeSelect(recup);
        while(rs.next()){
            listeannees.add(rs.getString("annee"));
        }
        if(listeannees.contains(anne)){
            return true;
        }
        } catch (Exception ex) {
            Logger.getLogger(inscriptionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> annee_cbx;
    private javax.swing.JToggleButton annuler_btn;
    private javax.swing.JComboBox<String> classe_cbx;
    private javax.swing.JButton deconnexion_btn;
    private javax.swing.JTextField etudiantEmail_txt;
    private javax.swing.JTextField etudiantNom_txt;
    private javax.swing.JTextField etudiantPrenom_txt;
    private javax.swing.JTextField etudiantTel_txt;
    private javax.swing.JButton inscrire_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableauAffichage;
    private javax.swing.JLabel userName_txt;
    // End of variables declaration//GEN-END:variables
}
